SVN Spy Overview	
	
	SVN Spy is a tool used to help aggregate statistics about 
	remote subversion repositories around the world with the 
	goal of helping compare developer statistics and demonstrate 
	that delivered results by a developer can be measured against 
	a group of peers or even unknown developers.

Vision

    The long term goal of this project is to help crawl known public 
	and private SVN repositories and gather statistics about all 
	known users in the effort to compare patterns that form amongst 
	groups of developers. Some of the questions that this effort will 
	try to determine are:

	* What groups of developers work well together
	
	* Are there patterns of activity that form during the normal throws of a software development cycle
	
	* Is it possible to determine the productivity of a developer simply by analyzing the statistics of a subversion repository
	
	* When do developers tend to have the most activity in their repository
	

Use Cases for which this software may apply
	
	* SVN Repository Administrator may need to monitor high usage 
	  times and respond appropriately with maintenance windows 
	  during low usage timeframes
	  
	* Software Development Team Leads and Software Development 
	  managers may want to track the performance and ownership 
	  of code in a source repository to make educated decisions 
	  based on actual code for staffing decisions and performance 
	  analysis of individuals involved in a development project.
	  
	* Company Managers may be interested in promoting a portion 
	  of their development staff based on merit and performance. 
	  The numbers generated by a tool such as SVN Spy could be 
	  factored into such decisions.
	  
	* Software developers often institute coding guidelines, and 
	  some guidelines can be measured such as commits with or 
	  without comments. Developers not meeting guidelines can 
	  be monitored via the SVN Spy analysis tool.
	  
	* A software company is about to hire an individual, they 
	  seem to like his resume and personality, but can he actual 
	  produce? They access his developer index score to verify 
	  that he falls in a good place on the performance bell curve 
	  amongst people of similar experience.

Planned Feature Road Map
	
	* Ability to define teams and product timelines to monitor 
	  development activity as it occurs
	  
	* Ability to compare developers amongst their peers either 
	  visually or in list format ordered on some key metric
	  
	* Expose all currently numeric metrics as rates to help level 
	  and measure performance equally
	  
	* File level detail ETL process to expose a finer level of 
	  granularity in reporting
	  
	* Code ownership by repository, branch, package, or even file level
	
	* Visual indicators to allow scheduling a repository for a 
	  new ETL run to refresh statistics
	  
	* First time users guided tour of features
	
	* Hourly activity monitor to visualize when svn activity 
	  is at its peak and low to plan maintenance activities
	  
	* Allow users to associate a real identity with a SVN user 
	  name or set of user names
	  
	* Allow a user to enter job information, Salary, Position 
	  name, vital company statistics to help show based on 
	  performance how much they make and allow others to compare 
	  against it to evaluate their own self worth
	  
	* Configurable alerts for metric thresh-holds and an escalation 
	  path if they do not improve over time to help place pressure 
	  within an organization to enforce coding guidelines and best 
	  practices
	  
	* Developer indexing much like the S&P index for stocks or a 
	  personal credit score. This arbitrary index or score will 
	  be calculated based on the historical statistics of a software 
	  developer’s performance. It can be graphed on a bell curve to 
	  determine the developer’s relative worth based on performance 
	  rather than their resume
