/**
 * Generated by Gas3 v1.1.0 (Granite Data Services).
 *
 * WARNING: DO NOT CHANGE THIS FILE. IT MAY BE OVERRIDDEN EACH TIME YOU USE
 * THE GENERATOR. CHANGE INSTEAD THE INHERITED CLASS (UserCompanyRoleDTO.as).
 */

package com.neosavvy.user.dto {

    import flash.utils.IDataInput;
    import flash.utils.IDataOutput;
    import flash.utils.IExternalizable;
    import org.granite.collections.IPersistentCollection;
    import org.granite.meta;

    use namespace meta;

    [Bindable]
    public class UserCompanyRoleDTOBase {

        private var __laziness:String = null;

        private var _company:CompanyDTO;
        private var _id:int;
        private var _role:RoleDTO;
        private var _user:UserDTO;

        meta function isInitialized(name:String = null):Boolean {
            if (!name)
                return __laziness === null;

            var property:* = this[name];
            return (
                (!(property is UserCompanyRoleDTO) || (property as UserCompanyRoleDTO).meta::isInitialized()) &&
                (!(property is IPersistentCollection) || (property as IPersistentCollection).isInitialized())
            );
        }

        public function set company(value:CompanyDTO):void {
            _company = value;
        }
        public function get company():CompanyDTO {
            return _company;
        }

        public function set id(value:int):void {
            _id = value;
        }
        public function get id():int {
            return _id;
        }

        public function set role(value:RoleDTO):void {
            _role = value;
        }
        public function get role():RoleDTO {
            return _role;
        }

        public function set user(value:UserDTO):void {
            _user = value;
        }
        public function get user():UserDTO {
            return _user;
        }

//        public function readExternal(input:IDataInput):void {
//            __laziness = input.readObject() as String;
//            if (meta::isInitialized()) {
//                _company = input.readObject() as CompanyDTO;
//                _id = input.readObject() as int;
//                _role = input.readObject() as RoleDTO;
//                _user = input.readObject() as UserDTO;
//            }
//            else {
//                _id = input.readObject() as int;
//            }
//        }
//
//        public function writeExternal(output:IDataOutput):void {
//            output.writeObject(__laziness);
//            if (meta::isInitialized()) {
//                output.writeObject(_company);
//                output.writeObject(_id);
//                output.writeObject(_role);
//                output.writeObject(_user);
//            }
//            else {
//                output.writeObject(_id);
//            }
//        }
    }
}