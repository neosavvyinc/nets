<beans:beans xmlns="http://www.springframework.org/schema/security"
  xmlns:beans="http://www.springframework.org/schema/beans"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://www.springframework.org/schema/beans
                      http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
                      http://www.springframework.org/schema/security
                      http://www.springframework.org/schema/security/spring-security-2.0.4.xsd">

    <http entry-point-ref="preAuthenticatedEntryPoint" />

    <beans:bean id="preAuthenticatedEntryPoint"
        class="org.springframework.security.ui.preauth.PreAuthenticatedProcessingFilterEntryPoint" />

    <authentication-provider user-service-ref="authenticationDao">
        <!--<user-service>-->
            <!--<user name="jeremy" password="atlanta" authorities="ROLE_USER, ROLE_ADMIN" />-->
            <!--<user name="keith" password="melbourne" authorities="ROLE_USER" />-->
        <!--</user-service>-->
    </authentication-provider>
    
    <beans:bean id="authenticationDao" class="org.springframework.security.userdetails.jdbc.JdbcDaoImpl">
        <beans:property name="dataSource" ref="dataSource"/>
        <beans:property name="usersByUsernameQuery">
            <beans:value>
                SELECT USERNAME, PASSWORD, CONFIRMED_REGISTRATION AS ENABLED FROM USER WHERE USERNAME=?
            </beans:value>
        </beans:property>
        <beans:property name="authoritiesByUsernameQuery">
            <beans:value>
                SELECT USERNAME, 'ROLE_ADMIN' AS PRIVILEGE FROM USER WHERE USERNAME=?
            </beans:value>
        </beans:property>
    </beans:bean>

    <global-method-security secured-annotations="enabled" jsr250-annotations="enabled"/>
</beans:beans>
